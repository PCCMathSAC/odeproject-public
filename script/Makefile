

## This file is part of the book                            	##
##                                                  			##
## Ordinary Differential Equations Project      				##
##                                                         	   	##
## Copyright (C) 2013-2018 Thomas W. Judson	                    ##
## See the file COPYING for copying conditions.            		##

#######################
# DO NOT EDIT THIS FILE
#######################

#   1) Do make a copy of Makefile.paths.original
#      as Makefile.paths
#   2) Edit Makefile.paths as directed there
#   3) This file (Makefile) and Makefile.paths.original
#      are managed by revision control and edits will conflict
#   4) See updated history in Makefile.paths.original
#      for changes, or follow the revision control history

##############
# Introduction
##############

# This is not a "true" makefile, since it does not
# operate on dependencies.  It is more of a shell
# script, sharing common configurations

# This is mostly offered as an example of one approach
# to managing a project with multiple output formats. and
# is not claimed to be "best practice"

######################
# System Prerequisites
######################

#   install         (system tool to make directories)
#   xsltproc        (xml/xsl text processor)
#   tar             (to package SageMathCloud worksheets for upload)
#   xmllint         (only to check source against DTD)
#   <helpers>       (PDF viewer, web browser, pager, Sage executable, etc)

#####
# Use
#####

#	A) Set default directory to be the location of this file
#	B) At command line:  make solutions  (and employ targets)



# The included file contains customized versions
# of locations of the principal components of this
# project and names of various helper executables
include Makefile.paths

# These paths are subdirectories of
# the Mathbook XML distribution
# MBUSR is where extension files get copied
# so relative paths work properly
MBXSL = $(MB)/xsl
MBSCRIPT = $(MB)/script
MBUSR = $(MB)/user
MBDTD = $(MB)/schema/dtd

# These are source and custom XSL subdirectories
# for the two ODE repositories
SRC = $(ODE)/src
XSL = $(ODE)/xsl

# These paths are subdirectories of
# a scratch directory
HTMLOUT    = $(SCRATCH)/html
PDFOUT     = $(SCRATCH)/pdf
SMCOUT     = $(SCRATCH)/ode-smc
DOCTEST    = $(SCRATCH)/doctest
EPUBOUT    = $(SCRATCH)/epub
SAGENBOUT  = $(SCRATCH)/sagenb
JUPYTEROUT = $(SCRATCH)/jupyter

# Following regularly presumes  xml:id="odeproject" on
# the <book> element, so xsltproc creates  odeproject.tex

###############
# Preliminaries
###############

# Diagrams
#   invoke mbx script to manufacture diagrams
#   tikz as SVG for HTML
#   sageplot as PDF for LaTeX, SVG for HTML
#   these outputs are in source repo now, and
#   are typically just copied out
#   this should be run if diagram source changes
#   NB: targets below copy versions out of repo and clobber these
diagrams:
	install -d $(HTMLOUT)/images
	-rm $(HTMLOUT)/images/*
	$(MBSCRIPT)/mbx -vv -c latex-image -f svg -d $(HTMLOUT)/images $(SRC)/odeproject.xml
	$(MBSCRIPT)/mbx -vv -c sageplot    -f pdf -d $(HTMLOUT)/images $(SRC)/odeproject.xml
	$(MBSCRIPT)/mbx -vv -c sageplot    -f svg -d $(HTMLOUT)/images $(SRC)/odeproject.xml

##########
# Products
##########

# HTML version
#   Copies in image files from source directory
#   Move to server: generated *.html and
#   entire directories - /images and /knowl
html:
	install -d $(HTMLOUT) $(MBUSR)
	cp -a $(SRC)/images $(HTMLOUT)
	cp $(XSL)/odeproject-common.xsl $(XSL)/odeproject-html.xsl $(MBUSR)
	cd $(HTMLOUT); \
	xsltproc --xinclude $(MBUSR)/odeproject-html.xsl $(SRC)/odeproject.xml

viewhtml:
	$(HTMLVIEWER) $(HTMLOUT)/odeproject.html &

# Full PDF version with Sage
#   copies in all image files, which is overkill (SVG's)
#   produces  odeproject-sage.tex  in scratch directory
#   which becomes PDF, along with index entries
#   Includes *all* material, and is fully electronic
#   This is the ODE/Sage downloadable Annual Edition
sage:
	# delete old  xsltproc  output
	# dash prevents error if not found
	-rm $(PDFOUT)/odeproject.tex
	install -d $(PDFOUT) $(MBUSR)
	cp -a $(SRC)/images $(PDFOUT)
	cp $(XSL)/odeproject-common.xsl $(XSL)/odeproject-latex.xsl $(XSL)/odeproject-sage.xsl $(MBUSR)
	cd $(PDFOUT); \
	xsltproc --xinclude $(MBUSR)/odeproject-sage.xsl $(SRC)/odeproject.xml; \
	$(ENGINE) odeproject.tex; makeindex odeproject; $(ENGINE) odeproject.tex; \
	mv odeproject.pdf odeproject-sage.pdf

# View PDF from correct directory
viewsage:
	$(PDFVIEWER) $(PDFOUT)/odeproject-sage.pdf &

# Electronic PDF version
#   copies in all image files, which is overkill (SVG's)
#   produces  odeproject-electronic.tex  in scratch directory
#   which becomes PDF, along with index entries
#   Similar to "print" but with links, etc.
#   No Sage material
#   This is default downloadable Annual Edition
#   ie, odeproject-YYYYMMDD.pdf in repository download section
electronic:
	# delete old  xsltproc  output
	# dash prevents error if not found
	-rm $(PDFOUT)/odeproject.tex
	install -d $(PDFOUT) $(MBUSR)
	cp -a $(SRC)/images $(PDFOUT)
	cp $(XSL)/odeproject-common.xsl $(XSL)/odeproject-latex.xsl $(XSL)/odeproject-electronic.xsl $(MBUSR)
	cd $(PDFOUT); \
	xsltproc -o odeproject.tex --xinclude $(MBUSR)/odeproject-electronic.xsl $(SRC)/odeproject.xml; \
	$(ENGINE) odeproject.tex; $(ENGINE) odeproject.tex; \
	mv odeproject.pdf odeproject-electronic.pdf

# View PDF from correct directory
viewelectronic:
	$(PDFVIEWER) $(PDFOUT)/odeproject-electronic.pdf &

# Print PDF version
#   A print version for print-on-demand
#   This will be source for the Annual Edition,
#     as sent to Orthogonal Publishing for modification
#   Black on white, no live URLs, etc
#   This is the "printable" downloadable Annual Edition
print:
	# delete old  xsltproc  output
	# dash prevents error if not found
	-rm $(PDFOUT)/odeproject.tex
	install -d $(PDFOUT) $(MBUSR)
	cp -a $(SRC)/images $(PDFOUT)
	cp $(XSL)/odeproject-common.xsl $(XSL)/odeproject-latex.xsl $(XSL)/odeproject-print.xsl $(MBUSR)
	cd $(PDFOUT); \
	xsltproc -o odeproject.tex --xinclude $(MBUSR)/odeproject-print.xsl $(SRC)/odeproject.xml; \
	$(ENGINE) odeproject.tex; $(ENGINE) odeproject.tex; \
	mv odeproject.pdf odeproject-print.pdf

# View PDF from correct directory
viewprint:
	$(PDFVIEWER) $(PDFOUT)/odeproject-print.pdf &

# Runestone HTML
#   Modeled on raw HTML
#   Will produce a zip file
#   SOME TOTALLY HARDCODED PATHS
runestone:
	install -d $(HTMLOUT) $(MBUSR) $(HTMLOUT)/_static
	cp -a $(SRC)/images $(HTMLOUT)
	cp $(XSL)/odeproject-common.xsl $(XSL)/odeproject-html.xsl $(MBUSR)
	cp /home/rob/mathbook/python-virtual/env/lib/python3.6/site-packages/runestone/dist/runestone.js $(HTMLOUT)/_static
	cp /home/rob/mathbook/python-virtual/env/lib/python3.6/site-packages/runestone/common/js/jquery.idle-timer.js $(HTMLOUT)/_static
	cd $(HTMLOUT); \
	xsltproc --xinclude -stringparam publisher ../publisher/runestone.xml $(MBUSR)/odeproject-html.xsl $(SRC)/odeproject.xml; \
	zip -r $(SCRATCH)/$(ZIPRS) .
######
# Sage
######

# ODEPROJECT has extensive support for Sage
# These targets are all related to that

# Doctest
#   All Sage exercises across entire source
#   Prepare location, remove *.py from previous runs
#   XSL dumps into current directory, Sage processes whole directory
#   chunk level 2 gives sections (commentaries, exercises)
doctest:
	-rm $(DOCTEST)/*.py; \
	install -d $(DOCTEST)
	cd $(DOCTEST); \
	xsltproc --xinclude --stringparam chunk-level 2 $(MBXSL)/mathbook-sage-doctest.xsl $(SRC)/odeproject.xml; \
	$(SAGE) -tp 0 .


##############
# Experimental
##############

# These are in-progress and/or totally broken

# Jupyter Notebooks - experimental
jupyter:
	install -d $(JUPYTEROUT) $(MBUSR)
	cp -a $(SRC)/images $(JUPYTEROUT)
	cp $(XSL)/odeproject-common.xsl $(XSL)/odeproject-jupyter.xsl $(MBUSR)
	cd $(JUPYTEROUT); \
	xsltproc --xinclude $(MBUSR)/odeproject-jupyter.xsl $(SRC)/odeproject.xml

